<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="12" total="46" passed="31">
  <reporter-output>
  </reporter-output>
  <suite name="Calculator test suite" duration-ms="278" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
    <groups>
      <group name="doubleInputData">
        <method signature="DivTest.divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" class="com.epam.tat.calctest.testng.DivTest"/>
        <method signature="MultTest.multDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.MultTest@5bcab519]" name="multDoubleTest" class="com.epam.tat.calctest.testng.MultTest"/>
        <method signature="PowTest.powTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.PowTest@e45f292]" name="powTest" class="com.epam.tat.calctest.testng.PowTest"/>
        <method signature="SqrtTest.sqrtTest(double, double)[pri:0, instance:com.epam.tat.calctest.testng.SqrtTest@5f2108b5]" name="sqrtTest" class="com.epam.tat.calctest.testng.SqrtTest"/>
        <method signature="SubTest.sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SubTest@31a5c39e]" name="sumDoubleTest" class="com.epam.tat.calctest.testng.SubTest"/>
        <method signature="SumTest.sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SumTest@3f49dace]" name="sumDoubleTest" class="com.epam.tat.calctest.testng.SumTest"/>
      </group> <!-- doubleInputData -->
      <group name="arithmetic">
        <method signature="DivTest.divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" class="com.epam.tat.calctest.testng.DivTest"/>
        <method signature="MultTest.multDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.MultTest@5bcab519]" name="multDoubleTest" class="com.epam.tat.calctest.testng.MultTest"/>
        <method signature="PowTest.powTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.PowTest@e45f292]" name="powTest" class="com.epam.tat.calctest.testng.PowTest"/>
        <method signature="SqrtTest.sqrtTest(double, double)[pri:0, instance:com.epam.tat.calctest.testng.SqrtTest@5f2108b5]" name="sqrtTest" class="com.epam.tat.calctest.testng.SqrtTest"/>
        <method signature="SubTest.sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SubTest@31a5c39e]" name="sumDoubleTest" class="com.epam.tat.calctest.testng.SubTest"/>
        <method signature="SumTest.sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SumTest@3f49dace]" name="sumDoubleTest" class="com.epam.tat.calctest.testng.SumTest"/>
      </group> <!-- arithmetic -->
    </groups>
    <test name="Tests of function with Long aruments" duration-ms="9" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
    </test> <!-- Tests of function with Long aruments -->
    <test name="Tests with exception" duration-ms="9" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
    </test> <!-- Tests with exception -->
    <test name="Tests of trigonimetric function" duration-ms="9" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
    </test> <!-- Tests of trigonimetric function -->
    <test name="Tests of arithmetic function with Double aruments" duration-ms="219" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
      <class name="com.epam.tat.calctest.testng.MultTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.tat.calctest.testng.MultTest@5bcab519]" name="setUp" is-config="true" duration-ms="0" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="multDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.MultTest@5bcab519]" name="multDoubleTest" duration-ms="5" started-at="2018-10-02T19:25:59Z" data-provider="multDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multDoubleTest -->
        <test-method status="PASS" signature="multDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.MultTest@5bcab519]" name="multDoubleTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="multDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-12.55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multDoubleTest -->
        <test-method status="PASS" signature="multDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.MultTest@5bcab519]" name="multDoubleTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="multDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multDoubleTest -->
        <test-method status="PASS" signature="multDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.MultTest@5bcab519]" name="multDoubleTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="multDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multDoubleTest -->
        <test-method status="PASS" signature="multDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.MultTest@5bcab519]" name="multDoubleTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="multDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multDoubleTest -->
        <test-method status="FAIL" signature="multDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.MultTest@5bcab519]" name="multDoubleTest" duration-ms="4" started-at="2018-10-02T19:25:59Z" data-provider="multDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.33]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16.0115]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result expected [16.0115] but found [16.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result expected [16.0115] but found [16.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.tat.calctest.testng.MultTest.multDoubleTest(MultTest.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multDoubleTest -->
      </class> <!-- com.epam.tat.calctest.testng.MultTest -->
      <class name="com.epam.tat.calctest.testng.SumTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.tat.calctest.testng.SumTest@3f49dace]" name="setUp" is-config="true" duration-ms="3" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SumTest@3f49dace]" name="sumDoubleTest" duration-ms="4" started-at="2018-10-02T19:25:59Z" data-provider="sumDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.56]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SumTest@3f49dace]" name="sumDoubleTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="sumDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-12.55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SumTest@3f49dace]" name="sumDoubleTest" duration-ms="3" started-at="2018-10-02T19:25:59Z" data-provider="sumDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SumTest@3f49dace]" name="sumDoubleTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="sumDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.5555]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.3333]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11.8888]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
      </class> <!-- com.epam.tat.calctest.testng.SumTest -->
      <class name="com.epam.tat.calctest.testng.DivTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="setUp" is-config="true" duration-ms="10" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" duration-ms="5" started-at="2018-10-02T19:25:59Z" data-provider="divDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divDoubleTest -->
        <test-method status="PASS" signature="divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" duration-ms="4" started-at="2018-10-02T19:25:59Z" data-provider="divDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-12.55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-Infinity]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divDoubleTest -->
        <test-method status="PASS" signature="divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="divDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divDoubleTest -->
        <test-method status="PASS" signature="divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="divDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divDoubleTest -->
        <test-method status="PASS" signature="divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="divDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divDoubleTest -->
        <test-method status="PASS" signature="divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="divDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7.8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.25]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[31.2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divDoubleTest -->
        <test-method status="PASS" signature="divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="divDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.5758]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.016]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-35.9875]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divDoubleTest -->
        <test-method status="PASS" signature="divDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.DivTest@6fd02e5]" name="divDoubleTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="divDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4042.66]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-144.22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-28.031202329773954]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divDoubleTest -->
      </class> <!-- com.epam.tat.calctest.testng.DivTest -->
      <class name="com.epam.tat.calctest.testng.SqrtTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.tat.calctest.testng.SqrtTest@5f2108b5]" name="setUp" is-config="true" duration-ms="2" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.tat.calctest.testng.SqrtTest@5f2108b5]" name="sqrtTest" duration-ms="7" started-at="2018-10-02T19:25:59Z" data-provider="sqrtData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.tat.calctest.testng.SqrtTest@5f2108b5]" name="sqrtTest" duration-ms="4" started-at="2018-10-02T19:25:59Z" data-provider="sqrtData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.tat.calctest.testng.SqrtTest@5f2108b5]" name="sqrtTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="sqrtData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.tat.calctest.testng.SqrtTest@5f2108b5]" name="sqrtTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="sqrtData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="PASS" signature="sqrtTest(double, double)[pri:0, instance:com.epam.tat.calctest.testng.SqrtTest@5f2108b5]" name="sqrtTest" duration-ms="0" started-at="2018-10-02T19:25:59Z" data-provider="sqrtData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
        <test-method status="FAIL" signature="sqrtTest(double, double)[pri:0, instance:com.epam.tat.calctest.testng.SqrtTest@5f2108b5]" name="sqrtTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="sqrtData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result expected [NaN] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result expected [NaN] but found [1.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.tat.calctest.testng.SqrtTest.sqrtTest(SqrtTest.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrtTest -->
      </class> <!-- com.epam.tat.calctest.testng.SqrtTest -->
      <class name="com.epam.tat.calctest.testng.SubTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.tat.calctest.testng.SubTest@31a5c39e]" name="setUp" is-config="true" duration-ms="0" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SubTest@31a5c39e]" name="sumDoubleTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="subDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-3.56]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SubTest@31a5c39e]" name="sumDoubleTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="subDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-12.55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-27.11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SubTest@31a5c39e]" name="sumDoubleTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="subDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
        <test-method status="PASS" signature="sumDoubleTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.SubTest@31a5c39e]" name="sumDoubleTest" duration-ms="3" started-at="2018-10-02T19:25:59Z" data-provider="subDoubleData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.5555]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10.3333]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-11.8888]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumDoubleTest -->
      </class> <!-- com.epam.tat.calctest.testng.SubTest -->
      <class name="com.epam.tat.calctest.testng.PowTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.tat.calctest.testng.PowTest@e45f292]" name="setUp" is-config="true" duration-ms="0" started-at="2018-10-02T19:25:59Z" finished-at="2018-10-02T19:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.PowTest@e45f292]" name="powTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="powData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.PowTest@e45f292]" name="powTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="powData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.PowTest@e45f292]" name="powTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="powData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.PowTest@e45f292]" name="powTest" duration-ms="1" started-at="2018-10-02T19:25:59Z" data-provider="powData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[81]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="PASS" signature="powTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.PowTest@e45f292]" name="powTest" duration-ms="0" started-at="2018-10-02T19:25:59Z" data-provider="powData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0625]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
        <test-method status="FAIL" signature="powTest(double, double, double)[pri:0, instance:com.epam.tat.calctest.testng.PowTest@e45f292]" name="powTest" duration-ms="2" started-at="2018-10-02T19:25:59Z" data-provider="powData" finished-at="2018-10-02T19:25:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11.211578456539659]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result expected [11.211578456539659] but found [9.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result expected [11.211578456539659] but found [9.0]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at com.epam.tat.calctest.testng.PowTest.powTest(PowTest.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- powTest -->
      </class> <!-- com.epam.tat.calctest.testng.PowTest -->
    </test> <!-- Tests of arithmetic function with Double aruments -->
  </suite> <!-- Calculator test suite -->
</testng-results>
